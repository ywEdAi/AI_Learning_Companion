{"ast":null,"code":"import React from\"react\";import{ActionTypes}from\"../types/highlightTypes\";import{Streamlit}from\"streamlit-component-lib\";// Define the initial state of the component\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const initialState={text:\"\",actual_text:[],highlights:[],selectedReference:0};// Reducer function to handle state transitions\nexport const reducer=(state,action)=>{var _highlights$selectedR;switch(action.type){case ActionTypes.SET_TEXT_HIGHLIGHTS:// Set the text andhighlight\nStreamlit.setComponentValue(action.payload.highlights);return{...state,text:action.payload.text,highlights:action.payload.highlights};case ActionTypes.RENDER_TEXT:// Logic to render text withhighlight\nconst{text,highlights}=state;const actual_text=[];let start=0;let selectedReference=state.selectedReference;if(!highlights[selectedReference]){selectedReference=0;if(!highlights[selectedReference]){highlights[selectedReference]=[];}}(_highlights$selectedR=highlights[selectedReference])===null||_highlights$selectedR===void 0?void 0:_highlights$selectedR.sort((a,b)=>a.start-b.start).forEach((highlight,index)=>{actual_text.push(/*#__PURE__*/_jsx(\"span\",{children:text.substring(start,highlight.start)},\"unhighlighted-\".concat(index)));actual_text.push(/*#__PURE__*/_jsx(\"span\",{className:\"highlighted border border-primary bg-primary/20\",children:text.substring(highlight.start,highlight.end)},\"highlighted-\".concat(index)));start=highlight.end;});actual_text.push(/*#__PURE__*/_jsx(\"span\",{children:text.substring(start)},\"highlighted-end\"));Streamlit.setComponentValue(highlights);return{...state,actual_text,selectedReference};case ActionTypes.ADD_REFERENCE:// Add a new reference\nconst newHighlights=[...state.highlights];const newIndex=newHighlights.length;newHighlights.push([]);return{...state,highlights:newHighlights,selectedReference:newIndex};case ActionTypes.SELECT_REFERENCE:return{...state,selectedReference:action.payload};case ActionTypes.REMOVE_REFERENCE:const updatedHighlights=[...state.highlights];updatedHighlights.splice(action.payload,1);return{...state,highlights:updatedHighlights,selectedReference:0};default:return state;}};","map":{"version":3,"names":["React","ActionTypes","Streamlit","jsx","_jsx","initialState","text","actual_text","highlights","selectedReference","reducer","state","action","_highlights$selectedR","type","SET_TEXT_HIGHLIGHTS","setComponentValue","payload","RENDER_TEXT","start","sort","a","b","forEach","highlight","index","push","children","substring","concat","className","end","ADD_REFERENCE","newHighlights","newIndex","length","SELECT_REFERENCE","REMOVE_REFERENCE","updatedHighlights","splice"],"sources":["/Users/yiwang/Documents/ChatYoutube/streamlit-annotation-tools/src/streamlit_annotation_tools/frontend/src/reducers/highlightReducer.tsx"],"sourcesContent":["import React from \"react\"\nimport { IState, IAction, ActionTypes } from \"../types/highlightTypes\"\nimport { Streamlit } from \"streamlit-component-lib\"\n\n// Define the initial state of the component\nexport const initialState: IState = {\n  text: \"\",\n  actual_text: [],\n  highlights: [],\n  selectedReference: 0,\n}\n\n// Reducer function to handle state transitions\nexport const reducer = (state: IState, action: IAction): IState => {\n  switch (action.type) {\n    case ActionTypes.SET_TEXT_HIGHLIGHTS:\n      // Set the text andhighlight\n      Streamlit.setComponentValue(action.payload.highlights)\n      return {\n        ...state,\n        text: action.payload.text,\n        highlights: action.payload.highlights,\n      }\n\n    case ActionTypes.RENDER_TEXT:\n      // Logic to render text withhighlight\n      const { text, highlights } = state\n      const actual_text: JSX.Element[] = []\n      let start = 0\n      let selectedReference = state.selectedReference\n\n      if (!highlights[selectedReference]) {\n        selectedReference = 0\n        if (!highlights[selectedReference]) {\n          highlights[selectedReference] = []\n        }\n      }\n\n      highlights[selectedReference]\n        ?.sort((a, b) => a.start - b.start)\n        .forEach((highlight, index) => {\n          actual_text.push(\n            <span key={`unhighlighted-${index}`}>\n              {text.substring(start, highlight.start)}\n            </span>\n          )\n          actual_text.push(\n            <span\n              key={`highlighted-${index}`}\n              className=\"highlighted border border-primary bg-primary/20\"\n            >\n              {text.substring(highlight.start, highlight.end)}\n            </span>\n          )\n          start = highlight.end\n        })\n      actual_text.push(\n        <span key=\"highlighted-end\">{text.substring(start)}</span>\n      )\n      Streamlit.setComponentValue(highlights)\n      return {\n        ...state,\n        actual_text,\n        selectedReference,\n      }\n\n    case ActionTypes.ADD_REFERENCE:\n      // Add a new reference\n      const newHighlights = [...state.highlights]\n      const newIndex = newHighlights.length\n      newHighlights.push([])\n\n      return {\n        ...state,\n        highlights: newHighlights,\n        selectedReference: newIndex,\n      }\n\n    case ActionTypes.SELECT_REFERENCE:\n      return {\n        ...state,\n        selectedReference: action.payload,\n      }\n\n    case ActionTypes.REMOVE_REFERENCE:\n      const updatedHighlights = [...state.highlights]\n      updatedHighlights.splice(action.payload, 1)\n      return {\n        ...state,\n        highlights: updatedHighlights,\n        selectedReference: 0,\n      }\n\n    default:\n      return state\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}