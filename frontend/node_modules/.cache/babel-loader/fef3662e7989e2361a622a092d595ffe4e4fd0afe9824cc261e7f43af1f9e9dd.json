{"ast":null,"code":"export const isLabeled=(start,end,labels)=>{return labels.some(label=>start>=label.start&&end<=label.end||start<=label.start&&end>=label.end||start<=label.start&&end>label.start&&end<=label.end||start>=label.start&&start<label.end&&end>=label.end);};export const removeLabelData=(start,end,labels)=>{return labels.filter(label=>!(start>=label.start&&end<=label.end)&&!(start<=label.start&&end>=label.end)&&!(start<=label.start&&end>label.start&&end<=label.end)&&!(start>=label.start&&start<label.end&&end>=label.end));};export const getCharactersCountUntilNode=(node,parent)=>{const walker=document.createTreeWalker(parent||document.body,NodeFilter.SHOW_TEXT,null);let charCount=0;while(walker.nextNode()){var _walker$currentNode$t;if(walker.currentNode===node){break;}charCount+=((_walker$currentNode$t=walker.currentNode.textContent)===null||_walker$currentNode$t===void 0?void 0:_walker$currentNode$t.length)||0;}return charCount;};export const adjustSelectionBounds=(textContent,startIndex,endIndex)=>{let startAdjustment=0;let endAdjustment=0;const reStartIndex=/^[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;while(!(textContent.charAt(startIndex+startAdjustment-1)===\" \"||textContent.charAt(startIndex+startAdjustment-1).match(reStartIndex))&&textContent.charAt(startIndex+startAdjustment-1)!==\"\"){startAdjustment-=1;}const reEndIndex=/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]$/g;while(!(textContent.charAt(endIndex+endAdjustment)===\" \"||textContent.charAt(endIndex+endAdjustment).match(reEndIndex))&&textContent.charAt(endIndex+endAdjustment)!==\"\"){endAdjustment+=1;}return{start:startIndex+startAdjustment,end:endIndex+endAdjustment};};export const snakeCase=str=>{return str.replace(/([A-Z])/g,\" $1\").trim().split(\" \").join(\"_\").toLowerCase();};export const formatKeys=(dict,isSnakeCase)=>{if(!isSnakeCase){return dict;}const formattedDict={};Object.keys(dict).forEach(key=>{formattedDict[snakeCase(key)]=dict[key];});return formattedDict;};","map":{"version":3,"names":["isLabeled","start","end","labels","some","label","removeLabelData","filter","getCharactersCountUntilNode","node","parent","walker","document","createTreeWalker","body","NodeFilter","SHOW_TEXT","charCount","nextNode","_walker$currentNode$t","currentNode","textContent","length","adjustSelectionBounds","startIndex","endIndex","startAdjustment","endAdjustment","reStartIndex","charAt","match","reEndIndex","snakeCase","str","replace","trim","split","join","toLowerCase","formatKeys","dict","isSnakeCase","formattedDict","Object","keys","forEach","key"],"sources":["/Users/yiwang/Documents/ChatYoutube/streamlit-annotation-tools/src/streamlit_annotation_tools/frontend/src/helpers/labelerHelpers.ts"],"sourcesContent":["import { ILabel } from \"../types/labelerTypes\"\n\nexport const isLabeled = (\n  start: number,\n  end: number,\n  labels: ILabel[]\n): boolean => {\n  return labels.some(\n    (label) =>\n      (start >= label.start && end <= label.end) ||\n      (start <= label.start && end >= label.end) ||\n      (start <= label.start && end > label.start && end <= label.end) ||\n      (start >= label.start && start < label.end && end >= label.end)\n  )\n}\n\nexport const removeLabelData = (\n  start: number,\n  end: number,\n  labels: ILabel[]\n): ILabel[] => {\n  return labels.filter(\n    (label) =>\n      !(start >= label.start && end <= label.end) &&\n      !(start <= label.start && end >= label.end) &&\n      !(start <= label.start && end > label.start && end <= label.end) &&\n      !(start >= label.start && start < label.end && end >= label.end)\n  )\n}\n\nexport const getCharactersCountUntilNode = (\n  node: Node,\n  parent: HTMLElement | null\n): number => {\n  const walker = document.createTreeWalker(\n    parent || document.body,\n    NodeFilter.SHOW_TEXT,\n    null\n  )\n\n  let charCount = 0\n  while (walker.nextNode()) {\n    if (walker.currentNode === node) {\n      break\n    }\n    charCount += walker.currentNode.textContent?.length || 0\n  }\n\n  return charCount\n}\n\nexport const adjustSelectionBounds = (\n  textContent: string,\n  startIndex: number,\n  endIndex: number\n): { start: number; end: number } => {\n  let startAdjustment = 0\n  let endAdjustment = 0\n\n  const reStartIndex = /^[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g\n  while (\n    !(\n      textContent.charAt(startIndex + startAdjustment - 1) === \" \" ||\n      textContent.charAt(startIndex + startAdjustment - 1).match(reStartIndex)\n    ) &&\n    textContent.charAt(startIndex + startAdjustment - 1) !== \"\"\n  ) {\n    startAdjustment -= 1\n  }\n\n  const reEndIndex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]$/g\n  while (\n    !(\n      textContent.charAt(endIndex + endAdjustment) === \" \" ||\n      textContent.charAt(endIndex + endAdjustment).match(reEndIndex)\n    ) &&\n    textContent.charAt(endIndex + endAdjustment) !== \"\"\n  ) {\n    endAdjustment += 1\n  }\n\n  return {\n    start: startIndex + startAdjustment,\n    end: endIndex + endAdjustment,\n  }\n}\n\nexport const snakeCase = (str: string): string => {\n  return str\n    .replace(/([A-Z])/g, \" $1\")\n    .trim()\n    .split(\" \")\n    .join(\"_\")\n    .toLowerCase()\n}\n\nexport const formatKeys = (\n  dict: { [key: string]: any },\n  isSnakeCase: boolean\n): { [key: string]: any } => {\n  if (!isSnakeCase) {\n    return dict\n  }\n\n  const formattedDict: { [key: string]: any } = {}\n  Object.keys(dict).forEach((key) => {\n    formattedDict[snakeCase(key)] = dict[key]\n  })\n\n  return formattedDict\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}