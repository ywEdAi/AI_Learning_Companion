{"ast":null,"code":"import React,{useEffect,useContext}from\"react\";import{Streamlit}from\"streamlit-component-lib\";import{useNullableRenderData}from\"./useNullableRenderData\";import{jsx as _jsx}from\"react/jsx-runtime\";const renderDataContext=/*#__PURE__*/React.createContext(undefined);/**\n * Returns `RenderData` received from Streamlit.\n */export const useRenderData=()=>{const contextValue=useContext(renderDataContext);if(contextValue==null){throw new Error(\"useRenderData() must be used inside <StreamlitProvider />\");}return contextValue;};/**\n * Wrapper for React-hooks-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */const StreamlitProvider=_ref=>{let{children}=_ref;const renderData=useNullableRenderData();useEffect(()=>{Streamlit.setFrameHeight();});// Don't render until we've gotten our first data from Streamlit.\nif(renderData==null){return null;}return/*#__PURE__*/_jsx(renderDataContext.Provider,{value:renderData,children:children});};export default StreamlitProvider;","map":{"version":3,"names":["React","useEffect","useContext","Streamlit","useNullableRenderData","jsx","_jsx","renderDataContext","createContext","undefined","useRenderData","contextValue","Error","StreamlitProvider","_ref","children","renderData","setFrameHeight","Provider","value"],"sources":["/Users/yiwang/Documents/ChatYoutube/streamlit-annotation-tools/src/streamlit_annotation_tools/frontend/src/utils/StreamlitProvider.tsx"],"sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { Streamlit, RenderData } from \"streamlit-component-lib\";\nimport { useNullableRenderData } from \"./useNullableRenderData\";\n\nconst renderDataContext = React.createContext<RenderData | undefined>(undefined);\n\n/**\n * Returns `RenderData` received from Streamlit.\n */\nexport const useRenderData = (): RenderData => {\n  const contextValue = useContext(renderDataContext);\n  if (contextValue == null) {\n    throw new Error(\"useRenderData() must be used inside <StreamlitProvider />\");\n  }\n\n  return contextValue;\n};\n\n/**\n * Wrapper for React-hooks-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\ninterface StreamlitProviderProps {\n  children: React.ReactNode;\n}\n\nconst StreamlitProvider: React.FC<StreamlitProviderProps> = ({ children }) => {\n  const renderData = useNullableRenderData();\n\n  useEffect(() => {\n    Streamlit.setFrameHeight();\n  });\n\n  // Don't render until we've gotten our first data from Streamlit.\n  if (renderData == null) {\n    return null;\n  }\n\n  return (\n    <renderDataContext.Provider value={renderData}>\n      {children}\n    </renderDataContext.Provider>\n  );\n};\n\nexport default StreamlitProvider;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,UAAU,KAAQ,OAAO,CACpD,OAASC,SAAS,KAAoB,yBAAyB,CAC/D,OAASC,qBAAqB,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhE,KAAM,CAAAC,iBAAiB,cAAGP,KAAK,CAACQ,aAAa,CAAyBC,SAAS,CAAC,CAEhF;AACA;AACA,GACA,MAAO,MAAM,CAAAC,aAAa,CAAGA,CAAA,GAAkB,CAC7C,KAAM,CAAAC,YAAY,CAAGT,UAAU,CAACK,iBAAiB,CAAC,CAClD,GAAII,YAAY,EAAI,IAAI,CAAE,CACxB,KAAM,IAAI,CAAAC,KAAK,CAAC,2DAA2D,CAAC,CAC9E,CAEA,MAAO,CAAAD,YAAY,CACrB,CAAC,CAED;AACA;AACA;AACA;AACA,GAKA,KAAM,CAAAE,iBAAmD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvE,KAAM,CAAAE,UAAU,CAAGZ,qBAAqB,CAAC,CAAC,CAE1CH,SAAS,CAAC,IAAM,CACdE,SAAS,CAACc,cAAc,CAAC,CAAC,CAC5B,CAAC,CAAC,CAEF;AACA,GAAID,UAAU,EAAI,IAAI,CAAE,CACtB,MAAO,KAAI,CACb,CAEA,mBACEV,IAAA,CAACC,iBAAiB,CAACW,QAAQ,EAACC,KAAK,CAAEH,UAAW,CAAAD,QAAA,CAC3CA,QAAQ,CACiB,CAAC,CAEjC,CAAC,CAED,cAAe,CAAAF,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}